/* –ö–ª–∏–µ–Ω—Ç –∏–≥—Ä—ã –¢–∞–Ω—á–∏–∫–∏.
   –≠—Ç–æ —Å–µ—Ç–µ–≤–∞—è –∏–≥—Ä–∞, –∫–ª–∏–µ–Ω—Ç —Ç–æ–ª—å–∫–æ
    —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–Ω–µ–Ω–∏–µ
    –ø–æ—Å—ã–ª–∞–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∏–¥–∞ "–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ ‚Üê ‚Üë ‚Üí ‚Üì ‚ê£"
    —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö -
        –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
        –≤—Ä–µ–º—è –Ω–∞–∂–∞—Ç–∏—è,
        –∫–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è.
    —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∏ —Å—Ç—Ä–µ–ª—å–±–∞
    –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–º–µ—Ä, –∫–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    ! - —É—Ç–æ—á–Ω–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–∏–Ω–∏–º–∞–µ–º—É—é
    –ø—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ –ø—Ä–∏—à–µ–¥—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç—É, –≤—Ä–∞–≥–æ–≤, –æ–±–æ–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
    –ø–æ–≤—Ç–æ—Ä—è–µ—Ç(–∂–¥—ë—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–∏–∫–∞)
*/

#include <SFML/System/Time.hpp>
#include <SFML/Graphics.hpp>
#include <iostream>
#include <fstream>
#include "AbstractScene.h"
#include "PhisicalScene.h"
#include "DrawScene.h"
#include "AIScene.h"
#include "PlayerController.h"
#include "SoundScene.h"

using namespace std;

int main() {

    AbstractScene abstract_scene;
    fstream file("levels/1.txt");
    abstract_scene.load_map(file);
    file.close();

    DrawScene draw_scene;
    AIScene ai_scene;
    PlayerController playr_controller;
    playr_controller.set_startXY(16 * 3 * 8, 24 * 3 * 8);
    PlayerController playr_controller2;
    playr_controller2.set_startXY(8 * 3 * 8, 24 * 3 * 8);
    PhisicalScene phisical_scene;
    SoundScene sound_scene;

    draw_scene.synchronize(&abstract_scene);
    phisical_scene.synchronize(&abstract_scene);
    ai_scene.synchronize(&abstract_scene);

    // –≤—Å–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞
    sf::Time cycle_time = sf::seconds(0.02);//0.02f);
    sf::RenderWindow window(sf::VideoMode(624, 624), "simple rts");

    sf::Clock clock;
    sf::Event event;
    while (window.isOpen()) {
        while (window.pollEvent(event)) {
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Down)) {
                playr_controller.set_down();
            };
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Right)) {
                playr_controller.set_right();
            };
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Up)) {
                playr_controller.set_up();
            };
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Left)) {
                playr_controller.set_left();
            };
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::Space)) {
                playr_controller.choot(&abstract_scene);
                std::cout << "—Å–¥–µ–ª–∞–Ω –≤—ã—Å—Ç—Ä–µ–ª" << std::endl;
            };
            //2 –∏–≥—Ä–æ–∫
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::S)) {
                playr_controller2.set_down();
            };
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::D)) {
                playr_controller2.set_right();
            };
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::W)) {
                playr_controller2.set_up();
            };
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::A)) {
                playr_controller2.set_left();
            };
            if (sf::Keyboard::isKeyPressed(sf::Keyboard::E)) {
                playr_controller2.choot(&abstract_scene);
                std::cout << "—Å–¥–µ–ª–∞–Ω –≤—ã—Å—Ç—Ä–µ–ª" << std::endl;
            };

            if (event.type == sf::Event::Closed)
                window.close();
        }
        //–ø—Ä–∏—à–ª–æ—Å—å –¥–∞—Ç—å –∑–Ω–∞—Ç—å —Ä–∏—Å—É—é—â–µ–π —Å—Ü–µ–Ω–µ –æ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–π —Å—Ü–µ–Ω–µ. –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ –±—ã –ø–æ–ª—É—á–∞—Ç—å —Ö, y –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
        ai_scene.handle_tick_all_AI(&abstract_scene, &phisical_scene);
        phisical_scene.handle_tick_all_objects(&abstract_scene);
        abstract_scene.clear_dead();
        draw_scene.synchronize(&abstract_scene);
        phisical_scene.synchronize(&abstract_scene);
        playr_controller.manage_tank(&abstract_scene, &phisical_scene);
        playr_controller2.manage_tank(&abstract_scene, &phisical_scene);
        ai_scene.synchronize(&abstract_scene);
        sound_scene.synchronize(&abstract_scene);
        //–≤—ã–≤–æ–¥–∏–º –≤—Å–µ —Å–ø—Ä–∞–π—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω
        window.clear();
        draw_scene.draw(window, &abstract_scene);
        window.display();
        sf::Time elapsed_time = clock.getElapsedTime() % cycle_time;
        //std::cout << "–æ—Ç—Ä–∏—Å–æ–≤–∞–Ω–æ –∑–∞ " << elapsed_time.asMilliseconds() << " –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥\n";
        sf::sleep(cycle_time - elapsed_time);
    }
    return 0;
}

// –Ø –Ω–µ –º–æ–≥—É –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç –≤ –æ–¥–∏–Ω–æ—á–∫—É –¥–µ–ª–∞—Ç—å üò≠
// –ù–æ —è –æ—á–µ–Ω—å —Ö–æ—á—É –∑–∞–∫–æ–Ω—á–∏—Ç—å –∫—É—Ä—Å —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º. –Ø –≤—Å—é —É—á—ë–±—É –∑–∞–ø—É—Å—Ç–∏–ª —Ä–∞–¥–∏ —ç—Ç–æ–≥–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞!